<!DOCTYPE html>
<html>
  <head>
	<title>Wanderer's Cloud- My files</title>
	<%- include('./common/darkmode.ejs') %>
  </head>
  <body class="bg-gray-900">
	<%- include("./common/nav.ejs", {user: user, my: true}); %>
	<div class="mb-16">
		<i id="pNavLeft" class="fa-solid fa-left-long text-4xl fixed left-5 text-wwhite" onclick="pNavL()"></i>
		<i id="pNavRight" class="fa-solid fa-right-long text-4xl fixed right-5 text-wwhite" onclick="pNavR()"></i>
	</div>
	<div class="grid gap-3 grid-cols-1 xs:grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 2xl:grid-cols-7">
		
		<% 	files.sort((a, b) => {
				return b.uploadedAt - a.uploadedAt;
			});
			files.forEach(file => { %>
			<%- include("./common/file.ejs", {file: file, csrfToken, ww}); %>
		<% }); %>
	</div>
	<a onclick="document.getElementById('fileUpload').click()" class="fixed bottom-10 right-10 bg-wblue text-wwhite text-center rounded-full align-middle drop-shadow-lg w-16 h-16 z-50 flex cursor-pointer hover:bg-wblue-dark transition-all duration-[100ms]"><i class="fa-solid fa-plus text-2xl m-auto"></i></a>
	<input type="file" hidden id="fileUpload" multiple />
	<div class="w-56 h-10 bg-wwhite dark:bg-wdark rounded-lg hidden fixed bottom-32 right-10 flex p-2 transition-all duration-[100ms] z-50" id="progressWidget">
		<div class="w-full h-6 bg-wdark dark:bg-wlight rounded-full margin-auto">
			<div id="uploadProgress" class="bg-wblue h-6 text-sm font-medium text-wwhite text-center p-1 leading-none rounded-full" style="width: 0%;transition: all 0.1s ease 0s;"> <span id="uploadProgressText">0%</span></div>
		</div>
	</div>
  </body>
  <script>
	  let page = 0;
	  let totalFiles = parseInt("<%=count%>");
	  const pageFiles = 21;
	  const params = new Proxy(new URLSearchParams(window.location.search), {
		  get: (searchParams, prop) => searchParams.get(prop),
	  });
	  if (params.page) page = parseInt(params.page);

	  const pNavLeft = document.getElementById("pNavLeft");
	  const pNavRight = document.getElementById("pNavRight");

	  const pNavL = () => {
		  if (page > 0) {
			  page--;
			  window.location.href = "/my?page=" + page;
		  }
	  };
	  const pNavR = () => {
		  if (page < Math.ceil(totalFiles / pageFiles) - 1) {
			  page++;
			  window.location.href = "/my?page=" + page;
		  }
	  };

	  if (page === 0) pNavLeft.classList.add("hiddenpls");
	  // Hide right arrow if there are no more pages
	  if (pageFiles * (page + 1) >= totalFiles) pNavRight.classList.add("hiddenpls");

	let settings = localStorage.getItem('_wcloud-settings');
    let firstTime = false
    if (!settings) {
        localStorage.setItem('_wcloud-settings', JSON.stringify({refreshAfterUpload: true, privateFiles: true, firstTime: true}));
    }
	settings = JSON.parse(localStorage.getItem('_wcloud-settings'));
	sInit();
	let hideTimeout
	const getFormDataSize = (formData) => [...formData].reduce((size, [name, value]) => size + (typeof value === 'string' ? value.length : value.size), 0); //thank you stackoverflow
	document.getElementById("fileUpload").addEventListener("change", (e) => {
		if(settings.firstTime) {
			alert("By default your uploads will be private, you can change this in the settings.")
			settings.firstTime = false;
			localStorage.setItem('_wcloud-settings', JSON.stringify(settings));
		}
		clearTimeout(hideTimeout);
		const formData = new FormData();
		const fileInput = document.getElementById("fileUpload");
		for(let i = 0; i < fileInput.files.length; i++) {
			formData.append(`file${i}`, fileInput.files[i]);
		};
		if (getFormDataSize(formData) > 10737418240) {
			alert("Your upload exceeds 10GB, are you certain whatever you are doing is worth it?\nIf you really really want to upload over 10GB at once contact us at contact@wanderers.cloud");
			return;
		}
		let xhr = new XMLHttpRequest();
		xhr.open("POST", "https://upload.wanderers.cloud");
		xhr.setRequestHeader("authentication", "<%=user.uploadKey%>");
		if(settings.privateFiles) xhr.setRequestHeader("w-private", "true");
		xhr.upload.addEventListener("progress", updateProgress)
		xhr.upload.addEventListener("loadend", e => {
			document.getElementById("uploadProgressText").innerHTML = `Processing...`;
			document.getElementById("fileUpload").value = "";
		})
		xhr.onreadystatechange = function() {
			if(xhr.readyState == 4 && xhr.status == 200) {
				document.getElementById("uploadProgressText").innerHTML = `Done`;
				hideTimeout = setTimeout(() => {
					document.getElementById("progressWidget").classList.add("hidden");
					if (settings.refreshAfterUpload) {
						location.reload();
					}
				}, settings.refreshAfterUpload ? 500 : 5000);
			} else if (xhr.readyState == 4 && xhr.status != 200) {
				alert(`${xhr.status}: ${xhr.responseText}`)
			}
		}
		xhr.send(formData);
		document.getElementById("progressWidget").classList.remove("hidden");
	})
	function deleteFile(id) {
		document.getElementById(id).remove()
	  	fetch("/api/deletefile", {
			method: "POST",
			headers: {
				"Content-Type": "application/json"
			},
			body: JSON.stringify({
				_csrf: "<%=csrfToken %>",
				id: id
			})
		}).then(res => res.json()).then(res => {
			if(res.error) {
				alert(res.error)
				
				location.reload();
			}
		})
	}
	function linkClipboard(link, element) {
		navigator.clipboard.writeText(link)
		element.classList.remove("fa-clipboard")
		element.classList.add("fa-clipboard-check")
		setTimeout(() => {
		element.classList.remove("fa-clipboard-check")
		element.classList.add("fa-clipboard")
		}, 1000)
	}
	function updateProgress(e) {
      if (e.lengthComputable) {
        var percentComplete = (e.loaded / e.total) * 100;
		document.getElementById("uploadProgressText").innerHTML = `${Math.floor(percentComplete) - 1}%`;
        document.getElementById("uploadProgress").style.width = `${percentComplete}%`;
      }
    }
  </script>
</html>
